plugins {
    id 'ru.vyarus.animalsniffer' version '1.2.0'
}

defaultTasks 'clean'

apply from: '../utils.gradle'
import org.apache.tools.ant.filters.*

apply plugin: 'java'
apply plugin: 'ru.vyarus.animalsniffer'
apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'checkstyle'
apply plugin: 'eclipse'

version = '3.5.4-SNAPSHOT'
group = 'com.ibm.watson.developer_cloud'

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

repositories {
    mavenCentral()
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

signing {
    sign configurations.archives
}

signArchives {
    onlyIf { Task task ->
        def shouldExec = false
        for (myArg in project.gradle.startParameter.taskRequests[0].args) {
            if (myArg.toLowerCase().contains("signjars") || myArg.toLowerCase().contains("uploadarchives")) {
                shouldExec = true
            }
        }
        return shouldExec
    }
}

checkstyleTest {
    ignoreFailures = true
}

checkstyle {
    configFile = rootProject.file('checkstyle.xml')
    ignoreFailures = true
}

dependencies {
    compile project(':core')

    testCompile project(path: ':core', configuration: 'tests')
    testCompile group: 'com.squareup.okhttp3', name: 'mockwebserver', version: '3.6.0'
    testCompile group: 'ch.qos.logback', name: 'logback-classic', version: '1.1.7'
    testCompile group: 'com.google.guava', name: 'guava', version: '19.0'
    testCompile group: 'junit', name: 'junit-dep', version: '4.11'
    signature 'org.codehaus.mojo.signature:java17:1.0@signature'
}

processResources {
    filter ReplaceTokens, tokens: [
            "pom.version": project.version,
            "build.date" : getDate()
    ]
}

uploadArchives {
    repositories.mavenDeployer {
        repository(url: "http://oss.sonatype.org/service/local/staging/deploy/maven2/") {
            authentication(userName: System.env.CI_DEPLOY_USERNAME, password: System.env.CI_DEPLOY_PASSWORD)
        }
        snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/"){
            authentication(userName: System.env.CI_DEPLOY_USERNAME, password: System.env.CI_DEPLOY_PASSWORD)
        }
    }
}
