# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support documentation.
# This workflow will download a prebuilt Java version, install dependencies, build and deploy/publish a new release
# For more information see: https://docs.github.com/en/actions/guides/building-and-testing-java-with-maven

name: Deploy and Publish

on:
  push:
    branches: [ '**' ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  deploy:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    name: Deploy and Publish
    env:
      MVN_ARGS: '-B -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn'
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        persist-credentials: false

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Set up Java
      uses: actions/setup-java@v2
      with:
        java-version: '8'
        distribution: 'adopt'

    - name: Build Java package
      run: mvn verify -fae -DskipITs -Dskip.unit.tests $MVN_ARGS

    - name: Setup Node
      uses: actions/setup-node@v1
      with:
        node-version: 12

    - name: Install Semantic Release dependencies
      run: |
        pip3 install --user bump2version
        npm install -g semantic-release
        npm install -g @semantic-release/changelog
        npm install -g @semantic-release/exec
        npm install -g @semantic-release/git
        npm install -g @semantic-release/github
        npm install -g @semantic-release/commit-analyzer
        npm install -g @semantic-release/release-notes-generator

    - name: Get the nextRelease.version from semantic release
      id: next_release
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      run: echo ::set-output name=NEXT_RELEASE::$(npx semantic-release --dry-run | grep -Po "semantic-release version \K.*? ")

    - name: Publish to Maven Central
      if:  ${{ steps.is_new_release.outputs.IS_NEW_RELEASE == '1' }}
      env:
        GHA_TAG: ${{ steps.next_release.outputs.NEXT_RELEASE }} # for setMavenVersion_gha
        OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }} # for .travis.settings.xml
        OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
        SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
        SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
        SIGNING_PASSPHRASE: ${{ secrets.SIGNING_PASSPHRASE }} # for setMavenVersion_gha
      run: |
        build/setupSigning_gha.sh
        build/setMavenVersion_gha.sh
